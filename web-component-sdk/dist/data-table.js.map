{"version":3,"file":"data-table.js","sourceRoot":"","sources":["../src/data-table.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,yBAAyB,EAAE,cAAc,EAAE,iBAAiB,EAAE,kBAAkB,EAAE,UAAU,EAAE,MAAM,0BAA0B,CAAC;AAExI,yBAAyB,EAAE;KACxB,QAAQ,CAAC,cAAc,EAAE,EAAE,iBAAiB,EAAE,EAAE,kBAAkB,EAAE,EAAE,UAAU,EAAE,CAAC,CAAC;AAUxE,IAAM,SAAS,GAAf,MAAM,SAAU,SAAQ,UAAU;IAAlC;;QACc,SAAI,GAAgB,EAAE,CAAC;IA2CpD,CAAC;IA5BU,KAAK,CAAC,iBAAiB;QAC9B,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,4CAA4C,CAAC,CAAC;QAC3E,IAAI,CAAC,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IACpC,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;;;YASH,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAA;;uDAEiB,IAAI,CAAC,EAAE;uDACP,IAAI,CAAC,KAAK;uDACV,IAAI,CAAC,SAAS;;WAE1D,CAAC;;;;KAIP,CAAC;IACJ,CAAC;;AAxCe,gBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;GAW3B,AAXqB,CAWpB;AAbyB;IAA1B,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;uCAAwB;AAD/B,SAAS;IAD7B,aAAa,CAAC,YAAY,CAAC;GACP,SAAS,CA4C7B;eA5CoB,SAAS","sourcesContent":["import { LitElement, html, css } from 'lit';\r\nimport { customElement, property } from 'lit/decorators.js';\r\nimport { provideFluentDesignSystem, fluentDataGrid, fluentDataGridRow, fluentDataGridCell, fluentCard } from '@fluentui/web-components';\r\n\r\nprovideFluentDesignSystem()\r\n  .register(fluentDataGrid(), fluentDataGridRow(), fluentDataGridCell(), fluentCard());\r\n\r\ninterface TableData {\r\n  userId: number;\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n}\r\n\r\n@customElement('data-table')\r\nexport default class DataTable extends LitElement {\r\n  @property({ type: Array }) data: TableData[] = [];\r\n\r\n  static override styles = css`\r\n    .custom-card {\r\n      --card-width: 500px;\r\n      --card-height: 400px;\r\n      padding: 22px;\r\n      margin: 200px auto 0px auto;\r\n    }\r\n    fluent-data-grid {\r\n      width: 100%;\r\n      border: 1px solid #ccc;\r\n    }\r\n  `;\r\n\r\n  override async connectedCallback() {\r\n    super.connectedCallback();\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/todos');\r\n    this.data = await response.json();\r\n  }\r\n\r\n  override render() {\r\n    return html`\r\n    <fluent-card class=\"custom-card\">\r\n      <fluent-design-system-provider use-defaults>\r\n        <fluent-data-grid>\r\n          <fluent-data-grid-row role=\"row\" row-type=\"header\">\r\n            <fluent-data-grid-cell cell-type=\"columnheader\" grid-column=\"1\">ID</fluent-data-grid-cell>\r\n            <fluent-data-grid-cell cell-type=\"columnheader\" grid-column=\"2\">Title</fluent-data-grid-cell>\r\n            <fluent-data-grid-cell cell-type=\"columnheader\" grid-column=\"3\">Completed</fluent-data-grid-cell>\r\n          </fluent-data-grid-row>\r\n          ${this.data.map(todo => html`\r\n            <fluent-data-grid-row role=\"row\">\r\n              <fluent-data-grid-cell grid-column=\"1\">${todo.id}</fluent-data-grid-cell>\r\n              <fluent-data-grid-cell grid-column=\"2\">${todo.title}</fluent-data-grid-cell>\r\n              <fluent-data-grid-cell grid-column=\"3\">${todo.completed}</fluent-data-grid-cell>\r\n            </fluent-data-grid-row>\r\n          `)}\r\n        </fluent-data-grid>\r\n      </fluent-design-system-provider>\r\n    </fluent-card>\r\n    `;\r\n  }\r\n}\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'data-table': DataTable;\r\n  }\r\n}\r\n"]}